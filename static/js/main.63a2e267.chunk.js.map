{"version":3,"sources":["component/Home.js","store/productAction.js","component/EditProduct.js","App.js","reportWebVitals.js","store/productReducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["connect","state","updatedData","product","data","useState","setData","history","useHistory","useEffect","length","map","prdct","index","product_name","weight","availability","isEditable","to","_id","onClick","push","EDIT_DATA","editData","type","payload","useStyles","makeStyles","theme","root","margin","padding","paper","spacing","textAlign","color","palette","text","secondary","dispatch","bindActionCreators","classes","onSubmit","values","a","required","value","undefined","className","classeName","render","handleSubmit","form","submitting","pristine","name","validate","input","meta","placeholder","error","touched","component","exact","path","HomePage","EditProduct","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","productData","productReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.63a2e267.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {useHistory, Link } from 'react-router-dom';\nimport './Home.css'\nimport {connect} from 'react-redux'\n\nfunction HomePage({updatedData}){\n    const [data,setData] = useState([])\n    const history = useHistory();\n    useEffect(() => {\n      setData(updatedData)\n  \n    }, [updatedData])\n\n    return(\n        <table>\n             <tr>\n                <th>Product Name</th>\n                <th>weight</th>\n                <th>Availability</th>\n                <th>isEditable</th>\n            </tr>\n          \n            {data.length>0 && data?.map((prdct,index)=>(\n              <tr>\n                  <td>{prdct?.product_name}</td>\n                  <td>{prdct?.weight}</td>\n                  <td>{prdct?.availability}</td>\n                  <td>\n                    {prdct?.isEditable? \n                     <Link to={`/edit-products/${prdct._id}`}>\n                     <button onClick={()=>history.push(`/edit-products/:${prdct._id}`)}>\n                      Edit</button>\n                    </Link> : ''}\n                 \n                    \n                      </td>\n              </tr>\n            )\n            )}\n        </table>\n     \n    )\n}\nconst mapStateToProps = state => {\n  return {\n      updatedData: state.product.data\n  }\n}\nexport default connect(mapStateToProps)(HomePage)\n","export const EDIT_DATA = \"EDIT_DATA\";\n\nexport const editData = (updatedData) => {\n      return {\n          type: EDIT_DATA,\n          payload: updatedData\n      }\n  }\n","import React from 'react'\nimport { Form, Field } from 'react-final-form'\nimport {useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { bindActionCreators } from \"redux\";\nimport {connect} from 'react-redux'\nimport {editData} from '../store/productAction'\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      margin:16,\n      padding:16\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\nfunction EditProduct({data,editData}){\n    const history = useHistory();\n    const classes = useStyles();\n    const onSubmit = async (values) => {\n      editData(values)\n      history.push('/')\n      };\n      const required = value => (value ? undefined : 'Required')\n\n    return(\n        <div className={classes.root}>\n         <Form\n         classeName={classes.root}\n         onSubmit={onSubmit}\n         render={({ handleSubmit,form, submitting, pristine, values }) => (\n         <form onSubmit={handleSubmit}>\n             <div>\n                  <Field name=\"name\" validate={required}>\n                    {({ input, meta }) => (\n                      <div>\n                        <label>Name</label>\n                        <input {...input} type=\"text\" placeholder=\"Name\" />\n                    {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n                )}\n          </Field>\n             </div>\n             <br />\n             <div>\n             <Field name=\"availability\" validate={required}>\n                    {({ input, meta }) => (\n                      <div>\n                        <label>Availability</label>\n                        <input {...input} type=\"text\" placeholder=\"availability\" />\n                    {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n                )}\n          </Field>\n             </div>\n             <br />\n\n             <div>\n                 <label>Weight</label>\n                 <Field name=\"weight\" component=\"input\" placeholder=\"Weight\" type=\"text\" />\n             </div>\n\n             <br />\n             <div>\n                 <label>Product Url</label>\n                 <Field name=\"productUrl\" component=\"input\" placeholder=\"Product Url\" type=\"text\" />\n             </div>\n             \n             <div>\n\n             <br />\n               \n             <label>Price Tier</label>\n             <label>\n                <Field\n                  name=\"priceTier\"\n                  component=\"input\"\n                  type=\"radio\"\n                  value=\"budget\"\n                />{' '}\n                budget\n              </label>\n              <label>\n                <Field\n                  name=\"priceTier\"\n                  component=\"input\"\n                  type=\"radio\"\n                  value=\"premier\"\n                />{' '}\n                premier\n              </label>\n\n             </div>\n\n             <br />\n\n             <div>\n            <label>Price Range</label>\n            <Field name=\"priceRange\" component=\"select\">\n              <option value=\"$1-10\">$1-10</option>\n              <option value=\"$11-20\">$11-20</option>\n              <option value=\"$21-30\">$21-30</option>\n            </Field>\n          </div>\n\n          <br />\n             <div>\n                 <label>Is Editable</label>\n                 <Field name=\"isEditable\" component=\"input\" placeholder=\"Is Editable\" type=\"checkbox\" />\n             </div>\n             <br />\n             <button type=\"submit\">Submit</button>\n         </form>\n         )}\n        \n     />\n    </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({editData}, dispatch)\nexport default connect(null,mapDispatchToProps)(EditProduct)","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './component/Home'\nimport EditProduct from './component/EditProduct'\nimport {editData} from './store/productAction'\nimport {connect} from 'react-redux'\n\nfunction App() {\n \n  return (\n    <Router>\n      <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path={\"/edit-products/:id\"} component={EditProduct}/>\n      </Switch>\n   \n  </Router>\n  );\n}\nconst mapStateToProps=(state)=>({ data:state.data })\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editData: ()=> dispatch(editData)\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {EDIT_DATA} from './productAction'\nimport productData from '../productData.json'\n\nconst initialState={\n    data: [...productData]\n}\n\n\nconst productReducer = (state = initialState, action ) => {\n    switch(action.type){\n        case EDIT_DATA : return {\n            ...state,\n            updatedData: [{...state},action.payload]\n        }\n        default:  return state\n    }\n\n} \n\nexport default productReducer;","import {combineReducers} from 'redux'\nimport productReducer from './productReducer'\n\nconst rootReducer = combineReducers({\n    product: productReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer'\n\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n    )\n\nexport default store\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <Provider store={store}>\n  <App  />\n</Provider>\n</BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}